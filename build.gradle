plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco'
    id "org.sonarqube" version "4.4.1.3373"
}

group = 'com.rprass'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.hateoas:spring-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: '3.2.4'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.2.0'
    implementation group: 'org.flywaydb', name: 'flyway-core', version: '10.8.1'
    runtimeOnly 'org.flywaydb:flyway-database-postgresql:10.14.0'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.3.0'
    implementation group: 'com.auth0', name: 'java-jwt', version: '4.4.0'
    implementation 'com.opencsv:opencsv:3.7'
    testImplementation "org.testcontainers:testcontainers:1.19.7"
    testImplementation 'org.testcontainers:postgresql'
    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '5.4.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.mockito:mockito-core:3.+"
}

bootJar {
    archiveFileName = 'app.jar'
    destinationDirectory = file('./app')
}

tasks.named('test') {
    useJUnitPlatform()
}


test {
    finalizedBy jacocoTestReport
}



jacoco {
    toolVersion = "0.8.11"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}


jacocoTestReport {
    dependsOn test

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/com/rprass/payment/domain/model/**"
            ])
        }))
    }
}



sonarqube {

    properties {

        property 'sonar.projectName', 'payments'

    }

}

